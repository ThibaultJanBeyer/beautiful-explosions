{
  "version": 3,
  "sources": ["../src/BubbleExplosion.ts"],
  "sourcesContent": ["export const BubbleExplosion = ({\n  element,\n  eventListener = 'click',\n  content,\n}: {\n  element: HTMLElement\n  eventListener?: string\n  content?: CSSStyleDeclaration['content']\n}): void => {\n  function random(min: number, max: number): number {\n    return Math.floor(Math.random() * (max - min + 1)) + min\n  }\n\n  function updateStyle(\n    el: HTMLElement,\n    style: Partial<ElementCSSInlineStyle['style']>\n  ) {\n    for (const key in style) {\n      if (Object.prototype.hasOwnProperty.call(style, key)) {\n        const value = style[key]\n        el.style[key] = value as string\n      }\n    }\n  }\n\n  function createElement({\n    tag = '',\n    classList = '',\n    value = '',\n    appendElement,\n    style,\n  }: {\n    tag?: string\n    classList?: string\n    value?: string\n    appendElement?: HTMLElement | ShadowRoot | null\n    style?: Partial<ElementCSSInlineStyle['style']>\n  }): HTMLElement {\n    const el = document.createElement(tag)\n    el.className = classList\n    el.innerHTML = value\n    if (style) updateStyle(el, style)\n    if (appendElement != null) appendElement.append(el)\n    return el\n  }\n\n  class BE extends HTMLElement {\n    colors = ['#D81CB8', '#05A542', '#DE215F', '#1CD8CE', '#1B3F3D']\n\n    container: HTMLElement\n\n    constructor() {\n      super()\n      this.attachShadow({ mode: 'open' })\n\n      let css = `\n        .element--explode {\n          animation-duration: 200ms;\n          animation-name: implode;\n        }\n\n        @keyframes implode {\n          20% {\n            opacity: 1;\n          }\n          100% {\n            opacity: 0;\n            width: 0;\n            height: 0;\n            font-size: 0;\n            pointer-events: none;\n          }\n        }\n\n        .circle {\n          border-radius: 50%;\n        }\n\n        .bubble {\n          position: absolute;\n          border: 2px solid red;\n          transform: scale(0, 0);\n          z-index: 1;\n        }\n\n        ${\n          content\n            ? `\n          .bubble {\n            border: 0;\n          }\n\n          .bubble::before {\n            content: '${content}';\n          }\n        `\n            : ''\n        }\n      `\n\n      for (let index = 0; index < 25; index++) {\n        const size = Math.min(element.offsetHeight, element.offsetWidth)\n        const temp = 1 + random(0, size)\n        const tempR = random(0, 360)\n        css += `\n          .bubble:nth-child(${index}) {\n            width: ${temp}px;\n            height: ${temp}px;\n            font-size: ${temp}px;\n            animation-duration: ${800 - random(0, 750)}ms;\n            animation-name: bMove--${index};\n            animation-delay: 100ms;\n          }\n          @keyframes bMove--${index} {\n            0% { transform: rotate(${tempR}deg) translate(0, 0) scale(0, 0); opacity: 1; }\n            50% { opacity: 0.7; }\n            100% {\n              transform:\n                rotate(${tempR}deg)\n                translate(\n                  ${random(0, Math.max(element.offsetWidth, 50))}px,\n                  ${random(0, Math.max(element.offsetWidth, 50))}px\n                )\n                scale(1, 1);\n              opacity: 0;\n            }\n          }\n        `\n      }\n\n      createElement({\n        tag: 'style',\n        appendElement: this.shadowRoot,\n        value: css,\n      })\n\n      this.container = createElement({\n        tag: 'div',\n        appendElement: this.shadowRoot,\n      })\n\n      element.addEventListener(eventListener, () => {\n        for (let j = 0; j < 30; j++) this.createBubble(element)\n        updateStyle(element, {\n          transition:\n            'opacity 200ms ease-in-out, transform 200ms ease-in-out, font-size 200ms ease-in-out',\n          transform: 'scale(0, 0) translate(50%, 50%)',\n          pointerEvents: 'none',\n        })\n        setTimeout(() => (element.style.display = 'none'), 200)\n      })\n    }\n\n    createBubble(targetEl: HTMLElement) {\n      const el = createElement({\n        tag: 'span',\n        classList: 'bubble',\n        style: {\n          top: targetEl.offsetTop + targetEl.offsetHeight / 2 + 'px',\n          left: targetEl.offsetLeft + targetEl.offsetWidth / 2 + 'px',\n          borderColor: this.colors[random(0, this.colors.length - 1)],\n        },\n      })\n      const typeId = random(0, 1)\n      if (typeId === 0) el.classList.add('circle')\n      this.container.appendChild(el)\n      setTimeout(() => this.container.removeChild(el), 800)\n    }\n  }\n\n  customElements.define('ba-bubble-explosion', BE)\n  document.body.append(createElement({ tag: 'ba-bubble-explosion' }))\n}\n"],
  "mappings": "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",
  "names": []
}
