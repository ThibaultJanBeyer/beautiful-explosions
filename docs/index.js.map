{
  "version": 3,
  "sources": ["../node_modules/uuid/dist/esm-browser/rng.js", "../node_modules/uuid/dist/esm-browser/stringify.js", "../node_modules/uuid/dist/esm-browser/native.js", "../node_modules/uuid/dist/esm-browser/v4.js", "../src/helpers/dom-element.ts", "../src/helpers/random.ts", "../src/BubbleExplosion.ts"],
  "sourcesContent": ["// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nlet getRandomValues;\nconst rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}", "import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\n\nexport function unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  return (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase();\n}\n\nfunction stringify(arr, offset = 0) {\n  const uuid = unsafeStringify(arr, offset); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;", "const randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default {\n  randomUUID\n};", "import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  if (native.randomUUID && !buf && !options) {\n    return native.randomUUID();\n  }\n\n  options = options || {};\n  const rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return unsafeStringify(rnds);\n}\n\nexport default v4;", "export const updateStyle = (\n  el: HTMLElement,\n  style: Partial<ElementCSSInlineStyle['style']>\n): void => {\n  for (const key in style) {\n    if (Object.prototype.hasOwnProperty.call(style, key)) {\n      const value = style[key]\n      el.style[key] = value as string\n    }\n  }\n}\n\nexport const createElement = ({\n  tag = '',\n  classList = '',\n  value = '',\n  appendElement,\n  style,\n  extraArrtibutes,\n}: {\n  tag?: string\n  classList?: string\n  value?: string\n  appendElement?: HTMLElement | ShadowRoot | null\n  style?: Partial<ElementCSSInlineStyle['style']>\n  extraArrtibutes?: { [s: string]: string }\n}): HTMLElement => {\n  const el = document.createElement(tag)\n  el.className = classList\n  el.innerHTML = value\n  if (style) updateStyle(el, style)\n  if (appendElement != null) appendElement.append(el)\n  if (extraArrtibutes)\n    Object.entries(extraArrtibutes).forEach(([key, val]) =>\n      el.setAttribute(key, val)\n    )\n  return el\n}\n\nexport const preloadContent = (root: ShadowRoot, content?: string) =>\n  new Promise((resolve) => {\n    // pre-load content\n    if (!content || !content.includes('url')) return resolve('ok')\n\n    // url(abc) => abc || url(\"abc\") => abc || url('abc') => abc\n    const url =\n      content[4] === '\"' || content[4] === \"'\"\n        ? content.slice(5, content.length - 2)\n        : content.slice(4, content.length - 1)\n\n    const preload = createElement({\n      tag: 'img',\n      appendElement: root,\n      classList: 'preload',\n      style: {\n        position: 'fixed',\n        top: '-10000px',\n        width: '1px',\n        height: '1px',\n        pointerEvents: 'none',\n      },\n      extraArrtibutes: {\n        src: url || '',\n      },\n    }) as HTMLImageElement\n\n    preload.addEventListener('load', () => {\n      root.removeChild(preload)\n      resolve('ok')\n    })\n    preload.addEventListener('error', () => {\n      root.removeChild(preload)\n      resolve('notOk')\n    })\n  })\n", "export const randomInt = (min: number, max: number): number =>\n  Math.floor(Math.random() * (max - min + 1)) + min\n", "import { v4 as uuidv4 } from 'uuid'\nimport {\n  updateStyle,\n  createElement,\n  preloadContent,\n} from './helpers/dom-element'\nimport { randomInt } from './helpers/random'\n\nexport const BubbleExplosion = ({\n  element,\n  eventListener,\n  content,\n  particles,\n  areaSize,\n  isAppearing,\n}: {\n  element: HTMLElement\n  eventListener?: string\n  content?: CSSStyleDeclaration['content']\n  particles: { size?: number; direction?: 'up' | 'down'; amount?: number }\n  areaSize?: { x?: number; y?: number }\n  isAppearing?: boolean\n}): { trigger: () => void } => {\n  const duration = 800\n  const elementLifeSpan = duration / 4\n\n  class BE extends HTMLElement {\n    colors = ['#D81CB8', '#05A542', '#DE215F', '#1CD8CE', '#1B3F3D']\n\n    isPreloading = false\n\n    container: HTMLElement\n\n    prevTransition: string\n\n    prevTranform: string\n\n    prevOpacity: string\n\n    prevTransformOrigin: string\n\n    prevPointerEvents: string\n\n    constructor() {\n      super()\n      this.attachShadow({ mode: 'open' })\n\n      this.prevTransition = element.style.transition\n      this.prevTranform = element.style.transform\n      this.prevOpacity = element.style.opacity\n      this.prevTransformOrigin = element.style.transformOrigin\n      this.prevPointerEvents = element.style.pointerEvents\n\n      createElement({\n        tag: 'style',\n        appendElement: this.shadowRoot,\n        value: /*CSS*/ `\n        .circle { border-radius: 50% }\n\n        .bubble {\n          position: absolute;\n          border: 2px solid red;\n          transform: scale(0, 0);\n          z-index: 1;\n        }\n\n        ${\n          content\n            ? /*CSS*/ `\n              .bubble { border: 0;  content: ${content} }\n              .bubble::after { content: ${content} }\n              .preload { content: ${content} }\n            `\n            : ''\n        }\n      `,\n      })\n\n      if (isAppearing)\n        updateStyle(element, {\n          transform: `${element.style.transform || ''} scale(1, 0)`,\n          opacity: '0',\n          transformOrigin:\n            particles?.direction === 'up'\n              ? 'bottom'\n              : particles?.direction === 'down'\n              ? 'top'\n              : 'middle',\n          transition: `\n          ${this.prevTransition ? `${this.prevTransition},` : ''}\n          opacity ${elementLifeSpan}ms ease-in-out ${duration / 6}ms, \n          transform ${elementLifeSpan}ms ease-in-out ${duration / 6}ms,\n          font-size ${elementLifeSpan}ms ease-in-out ${duration / 6}ms`,\n        })\n      else\n        updateStyle(element, {\n          transition: `\n          ${this.prevTransition ? `${this.prevTransition},` : ''}\n          opacity ${elementLifeSpan}ms ease-in-out, \n          transform ${elementLifeSpan}ms ease-in-out,\n          font-size ${elementLifeSpan}ms ease-in-out`,\n          transformOrigin:\n            particles?.direction === 'up'\n              ? 'top'\n              : particles?.direction === 'down'\n              ? 'bottom'\n              : 'middle',\n        })\n\n      this.container = createElement({\n        tag: 'div',\n        appendElement: this.shadowRoot,\n      })\n\n      if (eventListener) element.addEventListener(eventListener, this.trigger)\n    }\n\n    randomTranslateInt = (xy: 'x' | 'y', size: number, rect: DOMRect) =>\n      randomInt(\n        size / 2,\n        (areaSize && areaSize[xy]) || Math.max(rect.width, 50)\n      )\n\n    trigger = async () =>\n      new Promise((resolve) => {\n        const call = async () => {\n          const rect = element.getBoundingClientRect()\n          const amount = particles?.amount || 25\n\n          if (!this.shadowRoot) return\n\n          await preloadContent(this.shadowRoot, content)\n\n          createElement({\n            tag: 'style',\n            appendElement: this.shadowRoot,\n            value: this.getBubbleCss(amount, rect),\n          })\n\n          if (isAppearing)\n            updateStyle(element, {\n              transform: element.style.transform.replace(\n                'scale(1, 0)',\n                'scale(1, 1)'\n              ),\n              opacity: '1',\n            })\n          else\n            updateStyle(element, {\n              transform: `${element.style.transform} scale(0, 0)`,\n              pointerEvents: 'none',\n            })\n\n          if (eventListener)\n            element.removeEventListener(eventListener, this.trigger)\n\n          await Promise.all(\n            new Array(amount).fill(null).map(() => this.spawnBubble(rect))\n          )\n\n          this.cleanUp()\n          resolve('done')\n        }\n        // put on bottom call-stack\n        setTimeout(call)\n      })\n\n    getBubbleCss = (amount: number, rect: DOMRect): string => {\n      const size =\n        particles?.size || Math.max(Math.min(rect.height, rect.width), 25)\n      let css = ''\n      for (let index = 0; index < amount; index++) {\n        const temp = randomInt(1, size)\n        let tempR = randomInt(0, 360)\n        let translateY = this.randomTranslateInt('y', size, rect)\n        let translateX = this.randomTranslateInt('x', size, rect)\n        let startTranslateY = 0\n        let startTranslateX = 0\n\n        if (particles?.direction === 'up' || particles?.direction === 'down') {\n          tempR = 0\n          if (index < amount / 2) translateX *= -1 // spread evenly\n          startTranslateX = translateX\n          if (particles?.direction === 'up') {\n            translateY = this.randomTranslateInt('y', 0, rect)\n            translateY *= -1\n          }\n          if (particles?.direction === 'down') {\n            translateY = this.randomTranslateInt('y', size * -1, rect)\n          }\n        }\n\n        css += /*CSS*/ `\n          .bubble:nth-child(${index}) {\n            width: ${temp}px;\n            height: ${temp}px;\n            font-size: ${temp}px;\n            animation-duration: ${duration - randomInt(0, 750)}ms;\n            animation-name: bMove--${index};\n            animation-delay: 100ms;\n          }\n\n          @keyframes bMove--${index} {\n            0% { transform: rotate(${tempR}deg) translate3d(${startTranslateX}px, ${startTranslateY}px, 0) scale(0, 0); opacity: 1; }\n            50% { opacity: 0.7; }\n            100% {\n              transform:\n                rotate(${tempR}deg)\n                translate3d(\n                  ${translateX}px,\n                  ${translateY}px,\n                  1px\n                )\n                scale(1, 1);\n              opacity: 0;\n            }\n          }\n        `\n      }\n      return css\n    }\n\n    spawnBubble = (rect: DOMRect) =>\n      new Promise((resolve) => {\n        const el = createElement({\n          tag: 'span',\n          classList: 'bubble',\n          style: {\n            top: rect.top + rect.height / 2 + 'px',\n            left: rect.left + rect.width / 2 + 'px',\n            borderColor: this.colors[randomInt(0, this.colors.length - 1)],\n          },\n        })\n        if (randomInt(0, 1) === 0) el.classList.add('circle')\n        this.container.appendChild(el)\n\n        setTimeout(() => {\n          this.container.removeChild(el)\n          resolve('ok')\n        }, duration)\n      })\n\n    cleanUp = () => {\n      if (isAppearing)\n        updateStyle(element, {\n          transform: this.prevTranform,\n          opacity: this.prevOpacity,\n          transformOrigin: this.prevTransformOrigin,\n          transition: this.prevTransition,\n          pointerEvents: this.prevPointerEvents,\n        })\n    }\n  }\n\n  const componentName = `ba-bubble-explosion-${uuidv4()}`\n  customElements.define(componentName, BE)\n  const shadowElement = createElement({ tag: componentName }) as BE\n  document.body.append(shadowElement)\n\n  return {\n    trigger: shadowElement.trigger,\n  }\n}\n"],
  "mappings": ";AAGA,IAAI;AACJ,IAAM,QAAQ,IAAI,WAAW,EAAE;AAChB,SAAR,MAAuB;AAE5B,MAAI,CAAC,iBAAiB;AAEpB,sBAAkB,OAAO,WAAW,eAAe,OAAO,mBAAmB,OAAO,gBAAgB,KAAK,MAAM;AAE/G,QAAI,CAAC,iBAAiB;AACpB,YAAM,IAAI,MAAM,0GAA0G;AAAA,IAC5H;AAAA,EACF;AAEA,SAAO,gBAAgB,KAAK;AAC9B;;;ACXA,IAAM,YAAY,CAAC;AAEnB,SAAS,IAAI,GAAG,IAAI,KAAK,EAAE,GAAG;AAC5B,YAAU,MAAM,IAAI,KAAO,SAAS,EAAE,EAAE,MAAM,CAAC,CAAC;AAClD;AAEO,SAAS,gBAAgB,KAAK,SAAS,GAAG;AAG/C,UAAQ,UAAU,IAAI,SAAS,MAAM,UAAU,IAAI,SAAS,MAAM,UAAU,IAAI,SAAS,MAAM,UAAU,IAAI,SAAS,MAAM,MAAM,UAAU,IAAI,SAAS,MAAM,UAAU,IAAI,SAAS,MAAM,MAAM,UAAU,IAAI,SAAS,MAAM,UAAU,IAAI,SAAS,MAAM,MAAM,UAAU,IAAI,SAAS,MAAM,UAAU,IAAI,SAAS,MAAM,MAAM,UAAU,IAAI,SAAS,OAAO,UAAU,IAAI,SAAS,OAAO,UAAU,IAAI,SAAS,OAAO,UAAU,IAAI,SAAS,OAAO,UAAU,IAAI,SAAS,OAAO,UAAU,IAAI,SAAS,MAAM,YAAY;AACngB;;;AChBA,IAAM,aAAa,OAAO,WAAW,eAAe,OAAO,cAAc,OAAO,WAAW,KAAK,MAAM;AACtG,IAAO,iBAAQ;AAAA,EACb;AACF;;;ACCA,SAAS,GAAG,SAAS,KAAK,QAAQ;AAChC,MAAI,eAAO,cAAc,CAAC,OAAO,CAAC,SAAS;AACzC,WAAO,eAAO,WAAW;AAAA,EAC3B;AAEA,YAAU,WAAW,CAAC;AACtB,QAAM,OAAO,QAAQ,WAAW,QAAQ,OAAO,KAAK;AAEpD,OAAK,KAAK,KAAK,KAAK,KAAO;AAC3B,OAAK,KAAK,KAAK,KAAK,KAAO;AAE3B,MAAI,KAAK;AACP,aAAS,UAAU;AAEnB,aAAS,IAAI,GAAG,IAAI,IAAI,EAAE,GAAG;AAC3B,UAAI,SAAS,KAAK,KAAK;AAAA,IACzB;AAEA,WAAO;AAAA,EACT;AAEA,SAAO,gBAAgB,IAAI;AAC7B;AAEA,IAAO,aAAQ;;;AC5BR,IAAM,cAAc,CACzB,IACA,UACS;AACT,aAAW,OAAO,OAAO;AACvB,QAAI,OAAO,UAAU,eAAe,KAAK,OAAO,GAAG,GAAG;AACpD,YAAM,QAAQ,MAAM;AACpB,SAAG,MAAM,OAAO;AAAA,IAClB;AAAA,EACF;AACF;AAEO,IAAM,gBAAgB,CAAC;AAAA,EAC5B,MAAM;AAAA,EACN,YAAY;AAAA,EACZ,QAAQ;AAAA,EACR;AAAA,EACA;AAAA,EACA;AACF,MAOmB;AACjB,QAAM,KAAK,SAAS,cAAc,GAAG;AACrC,KAAG,YAAY;AACf,KAAG,YAAY;AACf,MAAI;AAAO,gBAAY,IAAI,KAAK;AAChC,MAAI,iBAAiB;AAAM,kBAAc,OAAO,EAAE;AAClD,MAAI;AACF,WAAO,QAAQ,eAAe,EAAE;AAAA,MAAQ,CAAC,CAAC,KAAK,GAAG,MAChD,GAAG,aAAa,KAAK,GAAG;AAAA,IAC1B;AACF,SAAO;AACT;AAEO,IAAM,iBAAiB,CAAC,MAAkB,YAC/C,IAAI,QAAQ,CAAC,YAAY;AAEvB,MAAI,CAAC,WAAW,CAAC,QAAQ,SAAS,KAAK;AAAG,WAAO,QAAQ,IAAI;AAG7D,QAAM,MACJ,QAAQ,OAAO,OAAO,QAAQ,OAAO,MACjC,QAAQ,MAAM,GAAG,QAAQ,SAAS,CAAC,IACnC,QAAQ,MAAM,GAAG,QAAQ,SAAS,CAAC;AAEzC,QAAM,UAAU,cAAc;AAAA,IAC5B,KAAK;AAAA,IACL,eAAe;AAAA,IACf,WAAW;AAAA,IACX,OAAO;AAAA,MACL,UAAU;AAAA,MACV,KAAK;AAAA,MACL,OAAO;AAAA,MACP,QAAQ;AAAA,MACR,eAAe;AAAA,IACjB;AAAA,IACA,iBAAiB;AAAA,MACf,KAAK,OAAO;AAAA,IACd;AAAA,EACF,CAAC;AAED,UAAQ,iBAAiB,QAAQ,MAAM;AACrC,SAAK,YAAY,OAAO;AACxB,YAAQ,IAAI;AAAA,EACd,CAAC;AACD,UAAQ,iBAAiB,SAAS,MAAM;AACtC,SAAK,YAAY,OAAO;AACxB,YAAQ,OAAO;AAAA,EACjB,CAAC;AACH,CAAC;;;AC1EI,IAAM,YAAY,CAAC,KAAa,QACrC,KAAK,MAAM,KAAK,OAAO,KAAK,MAAM,MAAM,EAAE,IAAI;;;ACOzC,IAAM,kBAAkB,CAAC;AAAA,EAC9B;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,MAO+B;AAC7B,QAAM,WAAW;AACjB,QAAM,kBAAkB,WAAW;AAEnC,QAAM,WAAW,YAAY;AAAA,IAC3B,SAAS,CAAC,WAAW,WAAW,WAAW,WAAW,SAAS;AAAA,IAE/D,eAAe;AAAA,IAEf;AAAA,IAEA;AAAA,IAEA;AAAA,IAEA;AAAA,IAEA;AAAA,IAEA;AAAA,IAEA,cAAc;AACZ,YAAM;AACN,WAAK,aAAa,EAAE,MAAM,OAAO,CAAC;AAElC,WAAK,iBAAiB,QAAQ,MAAM;AACpC,WAAK,eAAe,QAAQ,MAAM;AAClC,WAAK,cAAc,QAAQ,MAAM;AACjC,WAAK,sBAAsB,QAAQ,MAAM;AACzC,WAAK,oBAAoB,QAAQ,MAAM;AAEvC,oBAAc;AAAA,QACZ,KAAK;AAAA,QACL,eAAe,KAAK;AAAA,QACpB,OAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAWb,UACY;AAAA,+CACyB;AAAA,0CACL;AAAA,oCACN;AAAA,gBAEtB;AAAA;AAAA,MAGR,CAAC;AAED,UAAI;AACF,oBAAY,SAAS;AAAA,UACnB,WAAW,GAAG,QAAQ,MAAM,aAAa;AAAA,UACzC,SAAS;AAAA,UACT,iBACE,WAAW,cAAc,OACrB,WACA,WAAW,cAAc,SACzB,QACA;AAAA,UACN,YAAY;AAAA,YACV,KAAK,iBAAiB,GAAG,KAAK,oBAAoB;AAAA,oBAC1C,iCAAiC,WAAW;AAAA,sBAC1C,iCAAiC,WAAW;AAAA,sBAC5C,iCAAiC,WAAW;AAAA,QAC1D,CAAC;AAAA;AAED,oBAAY,SAAS;AAAA,UACnB,YAAY;AAAA,YACV,KAAK,iBAAiB,GAAG,KAAK,oBAAoB;AAAA,oBAC1C;AAAA,sBACE;AAAA,sBACA;AAAA,UACZ,iBACE,WAAW,cAAc,OACrB,QACA,WAAW,cAAc,SACzB,WACA;AAAA,QACR,CAAC;AAEH,WAAK,YAAY,cAAc;AAAA,QAC7B,KAAK;AAAA,QACL,eAAe,KAAK;AAAA,MACtB,CAAC;AAED,UAAI;AAAe,gBAAQ,iBAAiB,eAAe,KAAK,OAAO;AAAA,IACzE;AAAA,IAEA,qBAAqB,CAAC,IAAe,MAAc,SACjD;AAAA,MACE,OAAO;AAAA,MACN,YAAY,SAAS,OAAQ,KAAK,IAAI,KAAK,OAAO,EAAE;AAAA,IACvD;AAAA,IAEF,UAAU,YACR,IAAI,QAAQ,CAAC,YAAY;AACvB,YAAM,OAAO,YAAY;AACvB,cAAM,OAAO,QAAQ,sBAAsB;AAC3C,cAAM,SAAS,WAAW,UAAU;AAEpC,YAAI,CAAC,KAAK;AAAY;AAEtB,cAAM,eAAe,KAAK,YAAY,OAAO;AAE7C,sBAAc;AAAA,UACZ,KAAK;AAAA,UACL,eAAe,KAAK;AAAA,UACpB,OAAO,KAAK,aAAa,QAAQ,IAAI;AAAA,QACvC,CAAC;AAED,YAAI;AACF,sBAAY,SAAS;AAAA,YACnB,WAAW,QAAQ,MAAM,UAAU;AAAA,cACjC;AAAA,cACA;AAAA,YACF;AAAA,YACA,SAAS;AAAA,UACX,CAAC;AAAA;AAED,sBAAY,SAAS;AAAA,YACnB,WAAW,GAAG,QAAQ,MAAM;AAAA,YAC5B,eAAe;AAAA,UACjB,CAAC;AAEH,YAAI;AACF,kBAAQ,oBAAoB,eAAe,KAAK,OAAO;AAEzD,cAAM,QAAQ;AAAA,UACZ,IAAI,MAAM,MAAM,EAAE,KAAK,IAAI,EAAE,IAAI,MAAM,KAAK,YAAY,IAAI,CAAC;AAAA,QAC/D;AAEA,aAAK,QAAQ;AACb,gBAAQ,MAAM;AAAA,MAChB;AAEA,iBAAW,IAAI;AAAA,IACjB,CAAC;AAAA,IAEH,eAAe,CAAC,QAAgB,SAA0B;AACxD,YAAM,OACJ,WAAW,QAAQ,KAAK,IAAI,KAAK,IAAI,KAAK,QAAQ,KAAK,KAAK,GAAG,EAAE;AACnE,UAAI,MAAM;AACV,eAAS,QAAQ,GAAG,QAAQ,QAAQ,SAAS;AAC3C,cAAM,OAAO,UAAU,GAAG,IAAI;AAC9B,YAAI,QAAQ,UAAU,GAAG,GAAG;AAC5B,YAAI,aAAa,KAAK,mBAAmB,KAAK,MAAM,IAAI;AACxD,YAAI,aAAa,KAAK,mBAAmB,KAAK,MAAM,IAAI;AACxD,YAAI,kBAAkB;AACtB,YAAI,kBAAkB;AAEtB,YAAI,WAAW,cAAc,QAAQ,WAAW,cAAc,QAAQ;AACpE,kBAAQ;AACR,cAAI,QAAQ,SAAS;AAAG,0BAAc;AACtC,4BAAkB;AAClB,cAAI,WAAW,cAAc,MAAM;AACjC,yBAAa,KAAK,mBAAmB,KAAK,GAAG,IAAI;AACjD,0BAAc;AAAA,UAChB;AACA,cAAI,WAAW,cAAc,QAAQ;AACnC,yBAAa,KAAK,mBAAmB,KAAK,OAAO,IAAI,IAAI;AAAA,UAC3D;AAAA,QACF;AAEA,eAAe;AAAA,8BACO;AAAA,qBACT;AAAA,sBACC;AAAA,yBACG;AAAA,kCACS,WAAW,UAAU,GAAG,GAAG;AAAA,qCACxB;AAAA;AAAA;AAAA;AAAA,8BAIP;AAAA,qCACO,yBAAyB,sBAAsB;AAAA;AAAA;AAAA;AAAA,yBAI3D;AAAA;AAAA,oBAEL;AAAA,oBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAQd;AACA,aAAO;AAAA,IACT;AAAA,IAEA,cAAc,CAAC,SACb,IAAI,QAAQ,CAAC,YAAY;AACvB,YAAM,KAAK,cAAc;AAAA,QACvB,KAAK;AAAA,QACL,WAAW;AAAA,QACX,OAAO;AAAA,UACL,KAAK,KAAK,MAAM,KAAK,SAAS,IAAI;AAAA,UAClC,MAAM,KAAK,OAAO,KAAK,QAAQ,IAAI;AAAA,UACnC,aAAa,KAAK,OAAO,UAAU,GAAG,KAAK,OAAO,SAAS,CAAC;AAAA,QAC9D;AAAA,MACF,CAAC;AACD,UAAI,UAAU,GAAG,CAAC,MAAM;AAAG,WAAG,UAAU,IAAI,QAAQ;AACpD,WAAK,UAAU,YAAY,EAAE;AAE7B,iBAAW,MAAM;AACf,aAAK,UAAU,YAAY,EAAE;AAC7B,gBAAQ,IAAI;AAAA,MACd,GAAG,QAAQ;AAAA,IACb,CAAC;AAAA,IAEH,UAAU,MAAM;AACd,UAAI;AACF,oBAAY,SAAS;AAAA,UACnB,WAAW,KAAK;AAAA,UAChB,SAAS,KAAK;AAAA,UACd,iBAAiB,KAAK;AAAA,UACtB,YAAY,KAAK;AAAA,UACjB,eAAe,KAAK;AAAA,QACtB,CAAC;AAAA,IACL;AAAA,EACF;AAEA,QAAM,gBAAgB,uBAAuB,WAAO;AACpD,iBAAe,OAAO,eAAe,EAAE;AACvC,QAAM,gBAAgB,cAAc,EAAE,KAAK,cAAc,CAAC;AAC1D,WAAS,KAAK,OAAO,aAAa;AAElC,SAAO;AAAA,IACL,SAAS,cAAc;AAAA,EACzB;AACF;",
  "names": []
}
