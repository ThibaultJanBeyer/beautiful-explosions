{
  "version": 3,
  "sources": ["../node_modules/uuid/dist/esm-browser/rng.js", "../node_modules/uuid/dist/esm-browser/stringify.js", "../node_modules/uuid/dist/esm-browser/native.js", "../node_modules/uuid/dist/esm-browser/v4.js", "../src/BubbleExplosion.ts"],
  "sourcesContent": ["// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nlet getRandomValues;\nconst rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}", "import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\n\nexport function unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  return (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase();\n}\n\nfunction stringify(arr, offset = 0) {\n  const uuid = unsafeStringify(arr, offset); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;", "const randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default {\n  randomUUID\n};", "import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  if (native.randomUUID && !buf && !options) {\n    return native.randomUUID();\n  }\n\n  options = options || {};\n  const rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return unsafeStringify(rnds);\n}\n\nexport default v4;", "import { v4 as uuidv4 } from 'uuid'\n\nexport const BubbleExplosion = ({\n  element,\n  eventListener = 'click',\n  content,\n}: {\n  element: HTMLElement\n  eventListener?: string\n  content?: CSSStyleDeclaration['content']\n}): { trigger: () => void } => {\n  function random(min: number, max: number): number {\n    return Math.floor(Math.random() * (max - min + 1)) + min\n  }\n\n  function updateStyle(\n    el: HTMLElement,\n    style: Partial<ElementCSSInlineStyle['style']>\n  ) {\n    for (const key in style) {\n      if (Object.prototype.hasOwnProperty.call(style, key)) {\n        const value = style[key]\n        el.style[key] = value as string\n      }\n    }\n  }\n\n  function createElement({\n    tag = '',\n    classList = '',\n    value = '',\n    appendElement,\n    style,\n  }: {\n    tag?: string\n    classList?: string\n    value?: string\n    appendElement?: HTMLElement | ShadowRoot | null\n    style?: Partial<ElementCSSInlineStyle['style']>\n  }): HTMLElement {\n    const el = document.createElement(tag)\n    el.className = classList\n    el.innerHTML = value\n    if (style) updateStyle(el, style)\n    if (appendElement != null) appendElement.append(el)\n    return el\n  }\n\n  class BE extends HTMLElement {\n    colors = ['#D81CB8', '#05A542', '#DE215F', '#1CD8CE', '#1B3F3D']\n\n    container: HTMLElement\n\n    constructor() {\n      super()\n      this.attachShadow({ mode: 'open' })\n\n      let css = /*CSS*/ `\n        .element--explode {\n          animation-duration: 200ms;\n          animation-name: implode;\n        }\n\n        @keyframes implode {\n          20% {\n            opacity: 1;\n          }\n          100% {\n            opacity: 0;\n            width: 0;\n            height: 0;\n            font-size: 0;\n            pointer-events: none;\n          }\n        }\n\n        .circle {\n          border-radius: 50%;\n        }\n\n        .bubble {\n          position: absolute;\n          border: 2px solid red;\n          transform: scale(0, 0);\n          z-index: 1;\n        }\n\n        ${\n          content\n            ? `\n          .bubble {\n            border: 0;\n          }\n\n          .bubble::before {\n            content: '${content}';\n          }\n        `\n            : ''\n        }\n      `\n\n      for (let index = 0; index < 25; index++) {\n        const size = Math.min(element.offsetHeight, element.offsetWidth)\n        const temp = 1 + random(0, size)\n        const tempR = random(0, 360)\n        css += /*CSS*/ `\n          .bubble:nth-child(${index}) {\n            width: ${temp}px;\n            height: ${temp}px;\n            font-size: ${temp}px;\n            animation-duration: ${800 - random(0, 750)}ms;\n            animation-name: bMove--${index};\n            animation-delay: 100ms;\n          }\n          @keyframes bMove--${index} {\n            0% { transform: rotate(${tempR}deg) translate(0, 0) scale(0, 0); opacity: 1; }\n            50% { opacity: 0.7; }\n            100% {\n              transform:\n                rotate(${tempR}deg)\n                translate(\n                  ${random(0, Math.max(element.offsetWidth, 50))}px,\n                  ${random(0, Math.max(element.offsetWidth, 50))}px\n                )\n                scale(1, 1);\n              opacity: 0;\n            }\n          }\n        `\n      }\n\n      createElement({\n        tag: 'style',\n        appendElement: this.shadowRoot,\n        value: css,\n      })\n\n      this.container = createElement({\n        tag: 'div',\n        appendElement: this.shadowRoot,\n      })\n\n      if (eventListener) element.addEventListener(eventListener, this.trigger)\n    }\n\n    trigger = async () => {\n      updateStyle(element, {\n        transition:\n          'opacity 200ms ease-in-out, transform 200ms ease-in-out, font-size 200ms ease-in-out',\n        transform: `${element.style.transform || ''} scale(0, 0)`,\n        transformOrigin: 'center',\n        pointerEvents: 'none',\n      })\n      setTimeout(() => (element.style.display = 'none'), 200)\n      if (eventListener)\n        element.removeEventListener(eventListener, this.trigger)\n\n      await Promise.all(\n        new Array(30).fill(true).map(() => this.createBubble(element))\n      )\n    }\n\n    createBubble = (targetEl: HTMLElement) =>\n      new Promise((resolve) => {\n        let resolved = false\n        const el = createElement({\n          tag: 'span',\n          classList: 'bubble',\n          style: {\n            top: targetEl.offsetTop + targetEl.offsetHeight / 2 + 'px',\n            left: targetEl.offsetLeft + targetEl.offsetWidth / 2 + 'px',\n            borderColor: this.colors[random(0, this.colors.length - 1)],\n          },\n        })\n        const typeId = random(0, 1)\n        if (typeId === 0) el.classList.add('circle')\n        this.container.appendChild(el)\n\n        el.addEventListener('animationend', (e) => {\n          resolved = true\n          this.container.removeChild(el)\n          resolve(e)\n        })\n\n        setTimeout(() => {\n          if (resolved) return\n          this.container.removeChild(el)\n          resolve('ok')\n        }, 1000)\n      })\n  }\n\n  const componentName = `ba-bubble-explosion-${uuidv4()}`\n  customElements.define(componentName, BE)\n  const shadowElement = createElement({ tag: componentName }) as BE\n  const parent = element.parentElement || document.body\n  parent.append(shadowElement)\n\n  return {\n    trigger: shadowElement.trigger,\n  }\n}\n"],
  "mappings": "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",
  "names": ["getRandomValues", "rnds8", "rng", "byteToHex", "i", "unsafeStringify", "arr", "offset", "randomUUID", "native_default", "v4", "options", "buf", "offset", "native_default", "rnds", "rng", "i", "unsafeStringify", "v4_default", "BubbleExplosion", "element", "eventListener", "content", "random", "min", "max", "updateStyle", "el", "style", "key", "value", "createElement", "tag", "classList", "appendElement", "BE", "css", "index", "size", "temp", "tempR", "targetEl", "resolve", "resolved", "e", "componentName", "v4_default", "shadowElement"]
}
